#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Leitner_Three
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="JimKay")]
	public partial class LeitnerLessonsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLesson01(Lesson01 instance);
    partial void UpdateLesson01(Lesson01 instance);
    partial void DeleteLesson01(Lesson01 instance);
    partial void InsertSetting01(Setting01 instance);
    partial void UpdateSetting01(Setting01 instance);
    partial void DeleteSetting01(Setting01 instance);
    partial void InsertTabOfCont(TabOfCont instance);
    partial void UpdateTabOfCont(TabOfCont instance);
    partial void DeleteTabOfCont(TabOfCont instance);
    #endregion
		
		public LeitnerLessonsDataContext() : 
				base(global::Leitner_Three.Properties.Settings.Default.JimKayConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LeitnerLessonsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LeitnerLessonsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LeitnerLessonsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LeitnerLessonsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Lesson01> Lesson01s
		{
			get
			{
				return this.GetTable<Lesson01>();
			}
		}
		
		public System.Data.Linq.Table<Setting01> Setting01s
		{
			get
			{
				return this.GetTable<Setting01>();
			}
		}
		
		public System.Data.Linq.Table<TabOfCont> TabOfConts
		{
			get
			{
				return this.GetTable<TabOfCont>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Lesson01")]
	public partial class Lesson01 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID1;
		
		private int _Id;
		
		private string _Side1;
		
		private string _Side2;
		
		private string _Side3;
		
		private int _A_B_GoodCount;
		
		private int _A_C_GoodCount;
		
		private int _B_A_GoodCount;
		
		private int _B_C_GoodCount;
		
		private int _C_A_GoodCount;
		
		private int _C_B_GoodCount;
		
		private int _A_B_BadCount;
		
		private int _A_C_BadCount;
		
		private int _B_A_BadCount;
		
		private int _B_C_BadCount;
		
		private int _C_A_BadCount;
		
		private int _C_B_BadCount;
		
		private int _A_B_DisplayLocation;
		
		private int _A_C_DisplayLocation;
		
		private int _B_A_DisplayLocation;
		
		private int _B_C_DisplayLocation;
		
		private int _C_A_DisplayLocation;
		
		private int _C_B_DisplayLocation;
		
		private string _A_B_TestDate;
		
		private string _A_C_TestDate;
		
		private string _B_A_TestDate;
		
		private string _B_C_TestDate;
		
		private string _C_A_TestDate;
		
		private string _C_B_TestDate;
		
		private System.Nullable<double> _Randomize;
		
		private System.Data.Linq.Binary _SSMA_TimeStamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID1Changing(int value);
    partial void OnID1Changed();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnSide1Changing(string value);
    partial void OnSide1Changed();
    partial void OnSide2Changing(string value);
    partial void OnSide2Changed();
    partial void OnSide3Changing(string value);
    partial void OnSide3Changed();
    partial void OnA_B_GoodCountChanging(int value);
    partial void OnA_B_GoodCountChanged();
    partial void OnA_C_GoodCountChanging(int value);
    partial void OnA_C_GoodCountChanged();
    partial void OnB_A_GoodCountChanging(int value);
    partial void OnB_A_GoodCountChanged();
    partial void OnB_C_GoodCountChanging(int value);
    partial void OnB_C_GoodCountChanged();
    partial void OnC_A_GoodCountChanging(int value);
    partial void OnC_A_GoodCountChanged();
    partial void OnC_B_GoodCountChanging(int value);
    partial void OnC_B_GoodCountChanged();
    partial void OnA_B_BadCountChanging(int value);
    partial void OnA_B_BadCountChanged();
    partial void OnA_C_BadCountChanging(int value);
    partial void OnA_C_BadCountChanged();
    partial void OnB_A_BadCountChanging(int value);
    partial void OnB_A_BadCountChanged();
    partial void OnB_C_BadCountChanging(int value);
    partial void OnB_C_BadCountChanged();
    partial void OnC_A_BadCountChanging(int value);
    partial void OnC_A_BadCountChanged();
    partial void OnC_B_BadCountChanging(int value);
    partial void OnC_B_BadCountChanged();
    partial void OnA_B_DisplayLocationChanging(int value);
    partial void OnA_B_DisplayLocationChanged();
    partial void OnA_C_DisplayLocationChanging(int value);
    partial void OnA_C_DisplayLocationChanged();
    partial void OnB_A_DisplayLocationChanging(int value);
    partial void OnB_A_DisplayLocationChanged();
    partial void OnB_C_DisplayLocationChanging(int value);
    partial void OnB_C_DisplayLocationChanged();
    partial void OnC_A_DisplayLocationChanging(int value);
    partial void OnC_A_DisplayLocationChanged();
    partial void OnC_B_DisplayLocationChanging(int value);
    partial void OnC_B_DisplayLocationChanged();
    partial void OnA_B_TestDateChanging(string value);
    partial void OnA_B_TestDateChanged();
    partial void OnA_C_TestDateChanging(string value);
    partial void OnA_C_TestDateChanged();
    partial void OnB_A_TestDateChanging(string value);
    partial void OnB_A_TestDateChanged();
    partial void OnB_C_TestDateChanging(string value);
    partial void OnB_C_TestDateChanged();
    partial void OnC_A_TestDateChanging(string value);
    partial void OnC_A_TestDateChanged();
    partial void OnC_B_TestDateChanging(string value);
    partial void OnC_B_TestDateChanged();
    partial void OnRandomizeChanging(System.Nullable<double> value);
    partial void OnRandomizeChanged();
    partial void OnSSMA_TimeStampChanging(System.Data.Linq.Binary value);
    partial void OnSSMA_TimeStampChanged();
    #endregion
		
		public Lesson01()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID1", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID1
		{
			get
			{
				return this._ID1;
			}
			set
			{
				if ((this._ID1 != value))
				{
					this.OnID1Changing(value);
					this.SendPropertyChanging();
					this._ID1 = value;
					this.SendPropertyChanged("ID1");
					this.OnID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Side1", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Side1
		{
			get
			{
				return this._Side1;
			}
			set
			{
				if ((this._Side1 != value))
				{
					this.OnSide1Changing(value);
					this.SendPropertyChanging();
					this._Side1 = value;
					this.SendPropertyChanged("Side1");
					this.OnSide1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Side2", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Side2
		{
			get
			{
				return this._Side2;
			}
			set
			{
				if ((this._Side2 != value))
				{
					this.OnSide2Changing(value);
					this.SendPropertyChanging();
					this._Side2 = value;
					this.SendPropertyChanged("Side2");
					this.OnSide2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Side3", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Side3
		{
			get
			{
				return this._Side3;
			}
			set
			{
				if ((this._Side3 != value))
				{
					this.OnSide3Changing(value);
					this.SendPropertyChanging();
					this._Side3 = value;
					this.SendPropertyChanged("Side3");
					this.OnSide3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_B_GoodCount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int A_B_GoodCount
		{
			get
			{
				return this._A_B_GoodCount;
			}
			set
			{
				if ((this._A_B_GoodCount != value))
				{
					this.OnA_B_GoodCountChanging(value);
					this.SendPropertyChanging();
					this._A_B_GoodCount = value;
					this.SendPropertyChanged("A_B_GoodCount");
					this.OnA_B_GoodCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_C_GoodCount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int A_C_GoodCount
		{
			get
			{
				return this._A_C_GoodCount;
			}
			set
			{
				if ((this._A_C_GoodCount != value))
				{
					this.OnA_C_GoodCountChanging(value);
					this.SendPropertyChanging();
					this._A_C_GoodCount = value;
					this.SendPropertyChanged("A_C_GoodCount");
					this.OnA_C_GoodCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_A_GoodCount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int B_A_GoodCount
		{
			get
			{
				return this._B_A_GoodCount;
			}
			set
			{
				if ((this._B_A_GoodCount != value))
				{
					this.OnB_A_GoodCountChanging(value);
					this.SendPropertyChanging();
					this._B_A_GoodCount = value;
					this.SendPropertyChanged("B_A_GoodCount");
					this.OnB_A_GoodCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_C_GoodCount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int B_C_GoodCount
		{
			get
			{
				return this._B_C_GoodCount;
			}
			set
			{
				if ((this._B_C_GoodCount != value))
				{
					this.OnB_C_GoodCountChanging(value);
					this.SendPropertyChanging();
					this._B_C_GoodCount = value;
					this.SendPropertyChanged("B_C_GoodCount");
					this.OnB_C_GoodCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_A_GoodCount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int C_A_GoodCount
		{
			get
			{
				return this._C_A_GoodCount;
			}
			set
			{
				if ((this._C_A_GoodCount != value))
				{
					this.OnC_A_GoodCountChanging(value);
					this.SendPropertyChanging();
					this._C_A_GoodCount = value;
					this.SendPropertyChanged("C_A_GoodCount");
					this.OnC_A_GoodCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_B_GoodCount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int C_B_GoodCount
		{
			get
			{
				return this._C_B_GoodCount;
			}
			set
			{
				if ((this._C_B_GoodCount != value))
				{
					this.OnC_B_GoodCountChanging(value);
					this.SendPropertyChanging();
					this._C_B_GoodCount = value;
					this.SendPropertyChanged("C_B_GoodCount");
					this.OnC_B_GoodCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_B_BadCount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int A_B_BadCount
		{
			get
			{
				return this._A_B_BadCount;
			}
			set
			{
				if ((this._A_B_BadCount != value))
				{
					this.OnA_B_BadCountChanging(value);
					this.SendPropertyChanging();
					this._A_B_BadCount = value;
					this.SendPropertyChanged("A_B_BadCount");
					this.OnA_B_BadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_C_BadCount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int A_C_BadCount
		{
			get
			{
				return this._A_C_BadCount;
			}
			set
			{
				if ((this._A_C_BadCount != value))
				{
					this.OnA_C_BadCountChanging(value);
					this.SendPropertyChanging();
					this._A_C_BadCount = value;
					this.SendPropertyChanged("A_C_BadCount");
					this.OnA_C_BadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_A_BadCount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int B_A_BadCount
		{
			get
			{
				return this._B_A_BadCount;
			}
			set
			{
				if ((this._B_A_BadCount != value))
				{
					this.OnB_A_BadCountChanging(value);
					this.SendPropertyChanging();
					this._B_A_BadCount = value;
					this.SendPropertyChanged("B_A_BadCount");
					this.OnB_A_BadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_C_BadCount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int B_C_BadCount
		{
			get
			{
				return this._B_C_BadCount;
			}
			set
			{
				if ((this._B_C_BadCount != value))
				{
					this.OnB_C_BadCountChanging(value);
					this.SendPropertyChanging();
					this._B_C_BadCount = value;
					this.SendPropertyChanged("B_C_BadCount");
					this.OnB_C_BadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_A_BadCount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int C_A_BadCount
		{
			get
			{
				return this._C_A_BadCount;
			}
			set
			{
				if ((this._C_A_BadCount != value))
				{
					this.OnC_A_BadCountChanging(value);
					this.SendPropertyChanging();
					this._C_A_BadCount = value;
					this.SendPropertyChanged("C_A_BadCount");
					this.OnC_A_BadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_B_BadCount", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int C_B_BadCount
		{
			get
			{
				return this._C_B_BadCount;
			}
			set
			{
				if ((this._C_B_BadCount != value))
				{
					this.OnC_B_BadCountChanging(value);
					this.SendPropertyChanging();
					this._C_B_BadCount = value;
					this.SendPropertyChanged("C_B_BadCount");
					this.OnC_B_BadCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_B_DisplayLocation", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int A_B_DisplayLocation
		{
			get
			{
				return this._A_B_DisplayLocation;
			}
			set
			{
				if ((this._A_B_DisplayLocation != value))
				{
					this.OnA_B_DisplayLocationChanging(value);
					this.SendPropertyChanging();
					this._A_B_DisplayLocation = value;
					this.SendPropertyChanged("A_B_DisplayLocation");
					this.OnA_B_DisplayLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_C_DisplayLocation", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int A_C_DisplayLocation
		{
			get
			{
				return this._A_C_DisplayLocation;
			}
			set
			{
				if ((this._A_C_DisplayLocation != value))
				{
					this.OnA_C_DisplayLocationChanging(value);
					this.SendPropertyChanging();
					this._A_C_DisplayLocation = value;
					this.SendPropertyChanged("A_C_DisplayLocation");
					this.OnA_C_DisplayLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_A_DisplayLocation", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int B_A_DisplayLocation
		{
			get
			{
				return this._B_A_DisplayLocation;
			}
			set
			{
				if ((this._B_A_DisplayLocation != value))
				{
					this.OnB_A_DisplayLocationChanging(value);
					this.SendPropertyChanging();
					this._B_A_DisplayLocation = value;
					this.SendPropertyChanged("B_A_DisplayLocation");
					this.OnB_A_DisplayLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_C_DisplayLocation", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int B_C_DisplayLocation
		{
			get
			{
				return this._B_C_DisplayLocation;
			}
			set
			{
				if ((this._B_C_DisplayLocation != value))
				{
					this.OnB_C_DisplayLocationChanging(value);
					this.SendPropertyChanging();
					this._B_C_DisplayLocation = value;
					this.SendPropertyChanged("B_C_DisplayLocation");
					this.OnB_C_DisplayLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_A_DisplayLocation", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int C_A_DisplayLocation
		{
			get
			{
				return this._C_A_DisplayLocation;
			}
			set
			{
				if ((this._C_A_DisplayLocation != value))
				{
					this.OnC_A_DisplayLocationChanging(value);
					this.SendPropertyChanging();
					this._C_A_DisplayLocation = value;
					this.SendPropertyChanged("C_A_DisplayLocation");
					this.OnC_A_DisplayLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_B_DisplayLocation", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int C_B_DisplayLocation
		{
			get
			{
				return this._C_B_DisplayLocation;
			}
			set
			{
				if ((this._C_B_DisplayLocation != value))
				{
					this.OnC_B_DisplayLocationChanging(value);
					this.SendPropertyChanging();
					this._C_B_DisplayLocation = value;
					this.SendPropertyChanged("C_B_DisplayLocation");
					this.OnC_B_DisplayLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_B_TestDate", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string A_B_TestDate
		{
			get
			{
				return this._A_B_TestDate;
			}
			set
			{
				if ((this._A_B_TestDate != value))
				{
					this.OnA_B_TestDateChanging(value);
					this.SendPropertyChanging();
					this._A_B_TestDate = value;
					this.SendPropertyChanged("A_B_TestDate");
					this.OnA_B_TestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_C_TestDate", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string A_C_TestDate
		{
			get
			{
				return this._A_C_TestDate;
			}
			set
			{
				if ((this._A_C_TestDate != value))
				{
					this.OnA_C_TestDateChanging(value);
					this.SendPropertyChanging();
					this._A_C_TestDate = value;
					this.SendPropertyChanged("A_C_TestDate");
					this.OnA_C_TestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_A_TestDate", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string B_A_TestDate
		{
			get
			{
				return this._B_A_TestDate;
			}
			set
			{
				if ((this._B_A_TestDate != value))
				{
					this.OnB_A_TestDateChanging(value);
					this.SendPropertyChanging();
					this._B_A_TestDate = value;
					this.SendPropertyChanged("B_A_TestDate");
					this.OnB_A_TestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_C_TestDate", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string B_C_TestDate
		{
			get
			{
				return this._B_C_TestDate;
			}
			set
			{
				if ((this._B_C_TestDate != value))
				{
					this.OnB_C_TestDateChanging(value);
					this.SendPropertyChanging();
					this._B_C_TestDate = value;
					this.SendPropertyChanged("B_C_TestDate");
					this.OnB_C_TestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_A_TestDate", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string C_A_TestDate
		{
			get
			{
				return this._C_A_TestDate;
			}
			set
			{
				if ((this._C_A_TestDate != value))
				{
					this.OnC_A_TestDateChanging(value);
					this.SendPropertyChanging();
					this._C_A_TestDate = value;
					this.SendPropertyChanged("C_A_TestDate");
					this.OnC_A_TestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_B_TestDate", DbType="NVarChar(255) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string C_B_TestDate
		{
			get
			{
				return this._C_B_TestDate;
			}
			set
			{
				if ((this._C_B_TestDate != value))
				{
					this.OnC_B_TestDateChanging(value);
					this.SendPropertyChanging();
					this._C_B_TestDate = value;
					this.SendPropertyChanged("C_B_TestDate");
					this.OnC_B_TestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Randomize", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> Randomize
		{
			get
			{
				return this._Randomize;
			}
			set
			{
				if ((this._Randomize != value))
				{
					this.OnRandomizeChanging(value);
					this.SendPropertyChanging();
					this._Randomize = value;
					this.SendPropertyChanged("Randomize");
					this.OnRandomizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSMA_TimeStamp", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary SSMA_TimeStamp
		{
			get
			{
				return this._SSMA_TimeStamp;
			}
			set
			{
				if ((this._SSMA_TimeStamp != value))
				{
					this.OnSSMA_TimeStampChanging(value);
					this.SendPropertyChanging();
					this._SSMA_TimeStamp = value;
					this.SendPropertyChanged("SSMA_TimeStamp");
					this.OnSSMA_TimeStampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Setting01")]
	public partial class Setting01 : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID1;
		
		private string _QuestionTextBox;
		
		private string _AnswerTextBox;
		
		private string _HintTextBox;
		
		private string _Date;
		
		private string _StartTime;
		
		private string _A_B_PreviousAutoAge;
		
		private string _A_C_PreviousAutoAge;
		
		private string _B_A_PreviousAutoAge;
		
		private string _B_C_PreviousAutoAge;
		
		private string _C_A_PreviousAutoAge;
		
		private string _C_B_PreviousAutoAge;
		
		private int _A_B_AutoAgeInterval;
		
		private int _A_C_AutoAgeInterval;
		
		private int _B_A_AutoAgeInterval;
		
		private int _B_C_AutoAgeInterval;
		
		private int _C_A_AutoAgeInterval;
		
		private int _C_B_AutoAgeInterval;
		
		private string _Side1Name;
		
		private string _Side2Name;
		
		private string _Side3Name;
		
		private int _StudyMode;
		
		private string _StudySequence;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID1Changing(int value);
    partial void OnID1Changed();
    partial void OnQuestionTextBoxChanging(string value);
    partial void OnQuestionTextBoxChanged();
    partial void OnAnswerTextBoxChanging(string value);
    partial void OnAnswerTextBoxChanged();
    partial void OnHintTextBoxChanging(string value);
    partial void OnHintTextBoxChanged();
    partial void OnDateChanging(string value);
    partial void OnDateChanged();
    partial void OnStartTimeChanging(string value);
    partial void OnStartTimeChanged();
    partial void OnA_B_PreviousAutoAgeChanging(string value);
    partial void OnA_B_PreviousAutoAgeChanged();
    partial void OnA_C_PreviousAutoAgeChanging(string value);
    partial void OnA_C_PreviousAutoAgeChanged();
    partial void OnB_A_PreviousAutoAgeChanging(string value);
    partial void OnB_A_PreviousAutoAgeChanged();
    partial void OnB_C_PreviousAutoAgeChanging(string value);
    partial void OnB_C_PreviousAutoAgeChanged();
    partial void OnC_A_PreviousAutoAgeChanging(string value);
    partial void OnC_A_PreviousAutoAgeChanged();
    partial void OnC_B_PreviousAutoAgeChanging(string value);
    partial void OnC_B_PreviousAutoAgeChanged();
    partial void OnA_B_AutoAgeIntervalChanging(int value);
    partial void OnA_B_AutoAgeIntervalChanged();
    partial void OnA_C_AutoAgeIntervalChanging(int value);
    partial void OnA_C_AutoAgeIntervalChanged();
    partial void OnB_A_AutoAgeIntervalChanging(int value);
    partial void OnB_A_AutoAgeIntervalChanged();
    partial void OnB_C_AutoAgeIntervalChanging(int value);
    partial void OnB_C_AutoAgeIntervalChanged();
    partial void OnC_A_AutoAgeIntervalChanging(int value);
    partial void OnC_A_AutoAgeIntervalChanged();
    partial void OnC_B_AutoAgeIntervalChanging(int value);
    partial void OnC_B_AutoAgeIntervalChanged();
    partial void OnSide1NameChanging(string value);
    partial void OnSide1NameChanged();
    partial void OnSide2NameChanging(string value);
    partial void OnSide2NameChanged();
    partial void OnSide3NameChanging(string value);
    partial void OnSide3NameChanged();
    partial void OnStudyModeChanging(int value);
    partial void OnStudyModeChanged();
    partial void OnStudySequenceChanging(string value);
    partial void OnStudySequenceChanged();
    #endregion
		
		public Setting01()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID1", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID1
		{
			get
			{
				return this._ID1;
			}
			set
			{
				if ((this._ID1 != value))
				{
					this.OnID1Changing(value);
					this.SendPropertyChanging();
					this._ID1 = value;
					this.SendPropertyChanged("ID1");
					this.OnID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuestionTextBox", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string QuestionTextBox
		{
			get
			{
				return this._QuestionTextBox;
			}
			set
			{
				if ((this._QuestionTextBox != value))
				{
					this.OnQuestionTextBoxChanging(value);
					this.SendPropertyChanging();
					this._QuestionTextBox = value;
					this.SendPropertyChanged("QuestionTextBox");
					this.OnQuestionTextBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnswerTextBox", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string AnswerTextBox
		{
			get
			{
				return this._AnswerTextBox;
			}
			set
			{
				if ((this._AnswerTextBox != value))
				{
					this.OnAnswerTextBoxChanging(value);
					this.SendPropertyChanging();
					this._AnswerTextBox = value;
					this.SendPropertyChanged("AnswerTextBox");
					this.OnAnswerTextBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HintTextBox", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string HintTextBox
		{
			get
			{
				return this._HintTextBox;
			}
			set
			{
				if ((this._HintTextBox != value))
				{
					this.OnHintTextBoxChanging(value);
					this.SendPropertyChanging();
					this._HintTextBox = value;
					this.SendPropertyChanged("HintTextBox");
					this.OnHintTextBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartTime", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StartTime
		{
			get
			{
				return this._StartTime;
			}
			set
			{
				if ((this._StartTime != value))
				{
					this.OnStartTimeChanging(value);
					this.SendPropertyChanging();
					this._StartTime = value;
					this.SendPropertyChanged("StartTime");
					this.OnStartTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_B_PreviousAutoAge", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string A_B_PreviousAutoAge
		{
			get
			{
				return this._A_B_PreviousAutoAge;
			}
			set
			{
				if ((this._A_B_PreviousAutoAge != value))
				{
					this.OnA_B_PreviousAutoAgeChanging(value);
					this.SendPropertyChanging();
					this._A_B_PreviousAutoAge = value;
					this.SendPropertyChanged("A_B_PreviousAutoAge");
					this.OnA_B_PreviousAutoAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_C_PreviousAutoAge", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string A_C_PreviousAutoAge
		{
			get
			{
				return this._A_C_PreviousAutoAge;
			}
			set
			{
				if ((this._A_C_PreviousAutoAge != value))
				{
					this.OnA_C_PreviousAutoAgeChanging(value);
					this.SendPropertyChanging();
					this._A_C_PreviousAutoAge = value;
					this.SendPropertyChanged("A_C_PreviousAutoAge");
					this.OnA_C_PreviousAutoAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_A_PreviousAutoAge", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string B_A_PreviousAutoAge
		{
			get
			{
				return this._B_A_PreviousAutoAge;
			}
			set
			{
				if ((this._B_A_PreviousAutoAge != value))
				{
					this.OnB_A_PreviousAutoAgeChanging(value);
					this.SendPropertyChanging();
					this._B_A_PreviousAutoAge = value;
					this.SendPropertyChanged("B_A_PreviousAutoAge");
					this.OnB_A_PreviousAutoAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_C_PreviousAutoAge", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string B_C_PreviousAutoAge
		{
			get
			{
				return this._B_C_PreviousAutoAge;
			}
			set
			{
				if ((this._B_C_PreviousAutoAge != value))
				{
					this.OnB_C_PreviousAutoAgeChanging(value);
					this.SendPropertyChanging();
					this._B_C_PreviousAutoAge = value;
					this.SendPropertyChanged("B_C_PreviousAutoAge");
					this.OnB_C_PreviousAutoAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_A_PreviousAutoAge", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_A_PreviousAutoAge
		{
			get
			{
				return this._C_A_PreviousAutoAge;
			}
			set
			{
				if ((this._C_A_PreviousAutoAge != value))
				{
					this.OnC_A_PreviousAutoAgeChanging(value);
					this.SendPropertyChanging();
					this._C_A_PreviousAutoAge = value;
					this.SendPropertyChanged("C_A_PreviousAutoAge");
					this.OnC_A_PreviousAutoAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_B_PreviousAutoAge", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string C_B_PreviousAutoAge
		{
			get
			{
				return this._C_B_PreviousAutoAge;
			}
			set
			{
				if ((this._C_B_PreviousAutoAge != value))
				{
					this.OnC_B_PreviousAutoAgeChanging(value);
					this.SendPropertyChanging();
					this._C_B_PreviousAutoAge = value;
					this.SendPropertyChanged("C_B_PreviousAutoAge");
					this.OnC_B_PreviousAutoAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_B_AutoAgeInterval", DbType="Int NOT NULL")]
		public int A_B_AutoAgeInterval
		{
			get
			{
				return this._A_B_AutoAgeInterval;
			}
			set
			{
				if ((this._A_B_AutoAgeInterval != value))
				{
					this.OnA_B_AutoAgeIntervalChanging(value);
					this.SendPropertyChanging();
					this._A_B_AutoAgeInterval = value;
					this.SendPropertyChanged("A_B_AutoAgeInterval");
					this.OnA_B_AutoAgeIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_A_C_AutoAgeInterval", DbType="Int NOT NULL")]
		public int A_C_AutoAgeInterval
		{
			get
			{
				return this._A_C_AutoAgeInterval;
			}
			set
			{
				if ((this._A_C_AutoAgeInterval != value))
				{
					this.OnA_C_AutoAgeIntervalChanging(value);
					this.SendPropertyChanging();
					this._A_C_AutoAgeInterval = value;
					this.SendPropertyChanged("A_C_AutoAgeInterval");
					this.OnA_C_AutoAgeIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_A_AutoAgeInterval", DbType="Int NOT NULL")]
		public int B_A_AutoAgeInterval
		{
			get
			{
				return this._B_A_AutoAgeInterval;
			}
			set
			{
				if ((this._B_A_AutoAgeInterval != value))
				{
					this.OnB_A_AutoAgeIntervalChanging(value);
					this.SendPropertyChanging();
					this._B_A_AutoAgeInterval = value;
					this.SendPropertyChanged("B_A_AutoAgeInterval");
					this.OnB_A_AutoAgeIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_B_C_AutoAgeInterval", DbType="Int NOT NULL")]
		public int B_C_AutoAgeInterval
		{
			get
			{
				return this._B_C_AutoAgeInterval;
			}
			set
			{
				if ((this._B_C_AutoAgeInterval != value))
				{
					this.OnB_C_AutoAgeIntervalChanging(value);
					this.SendPropertyChanging();
					this._B_C_AutoAgeInterval = value;
					this.SendPropertyChanged("B_C_AutoAgeInterval");
					this.OnB_C_AutoAgeIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_A_AutoAgeInterval", DbType="Int NOT NULL")]
		public int C_A_AutoAgeInterval
		{
			get
			{
				return this._C_A_AutoAgeInterval;
			}
			set
			{
				if ((this._C_A_AutoAgeInterval != value))
				{
					this.OnC_A_AutoAgeIntervalChanging(value);
					this.SendPropertyChanging();
					this._C_A_AutoAgeInterval = value;
					this.SendPropertyChanged("C_A_AutoAgeInterval");
					this.OnC_A_AutoAgeIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_C_B_AutoAgeInterval", DbType="Int NOT NULL")]
		public int C_B_AutoAgeInterval
		{
			get
			{
				return this._C_B_AutoAgeInterval;
			}
			set
			{
				if ((this._C_B_AutoAgeInterval != value))
				{
					this.OnC_B_AutoAgeIntervalChanging(value);
					this.SendPropertyChanging();
					this._C_B_AutoAgeInterval = value;
					this.SendPropertyChanged("C_B_AutoAgeInterval");
					this.OnC_B_AutoAgeIntervalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Side1Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Side1Name
		{
			get
			{
				return this._Side1Name;
			}
			set
			{
				if ((this._Side1Name != value))
				{
					this.OnSide1NameChanging(value);
					this.SendPropertyChanging();
					this._Side1Name = value;
					this.SendPropertyChanged("Side1Name");
					this.OnSide1NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Side2Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Side2Name
		{
			get
			{
				return this._Side2Name;
			}
			set
			{
				if ((this._Side2Name != value))
				{
					this.OnSide2NameChanging(value);
					this.SendPropertyChanging();
					this._Side2Name = value;
					this.SendPropertyChanged("Side2Name");
					this.OnSide2NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Side3Name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string Side3Name
		{
			get
			{
				return this._Side3Name;
			}
			set
			{
				if ((this._Side3Name != value))
				{
					this.OnSide3NameChanging(value);
					this.SendPropertyChanging();
					this._Side3Name = value;
					this.SendPropertyChanged("Side3Name");
					this.OnSide3NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudyMode", DbType="Int NOT NULL")]
		public int StudyMode
		{
			get
			{
				return this._StudyMode;
			}
			set
			{
				if ((this._StudyMode != value))
				{
					this.OnStudyModeChanging(value);
					this.SendPropertyChanging();
					this._StudyMode = value;
					this.SendPropertyChanged("StudyMode");
					this.OnStudyModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StudySequence", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string StudySequence
		{
			get
			{
				return this._StudySequence;
			}
			set
			{
				if ((this._StudySequence != value))
				{
					this.OnStudySequenceChanging(value);
					this.SendPropertyChanging();
					this._StudySequence = value;
					this.SendPropertyChanged("StudySequence");
					this.OnStudySequenceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TabOfCont")]
	public partial class TabOfCont : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID1;
		
		private short _Id;
		
		private string _Table_Name;
		
		private string _Lesson_Name;
		
		private string _Spare01;
		
		private string _Spare02;
		
		private string _Spare03;
		
		private string _Spare04;
		
		private string _Spare05;
		
		private string _Spare06;
		
		private string _Spare07;
		
		private string _Spare08;
		
		private string _Spare09;
		
		private string _Spare10;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID1Changing(int value);
    partial void OnID1Changed();
    partial void OnIdChanging(short value);
    partial void OnIdChanged();
    partial void OnTable_NameChanging(string value);
    partial void OnTable_NameChanged();
    partial void OnLesson_NameChanging(string value);
    partial void OnLesson_NameChanged();
    partial void OnSpare01Changing(string value);
    partial void OnSpare01Changed();
    partial void OnSpare02Changing(string value);
    partial void OnSpare02Changed();
    partial void OnSpare03Changing(string value);
    partial void OnSpare03Changed();
    partial void OnSpare04Changing(string value);
    partial void OnSpare04Changed();
    partial void OnSpare05Changing(string value);
    partial void OnSpare05Changed();
    partial void OnSpare06Changing(string value);
    partial void OnSpare06Changed();
    partial void OnSpare07Changing(string value);
    partial void OnSpare07Changed();
    partial void OnSpare08Changing(string value);
    partial void OnSpare08Changed();
    partial void OnSpare09Changing(string value);
    partial void OnSpare09Changed();
    partial void OnSpare10Changing(string value);
    partial void OnSpare10Changed();
    #endregion
		
		public TabOfCont()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID1", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID1
		{
			get
			{
				return this._ID1;
			}
			set
			{
				if ((this._ID1 != value))
				{
					this.OnID1Changing(value);
					this.SendPropertyChanging();
					this._ID1 = value;
					this.SendPropertyChanged("ID1");
					this.OnID1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="SmallInt NOT NULL")]
		public short Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Table_Name", DbType="NVarChar(255)")]
		public string Table_Name
		{
			get
			{
				return this._Table_Name;
			}
			set
			{
				if ((this._Table_Name != value))
				{
					this.OnTable_NameChanging(value);
					this.SendPropertyChanging();
					this._Table_Name = value;
					this.SendPropertyChanged("Table_Name");
					this.OnTable_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lesson_Name", DbType="NVarChar(255)")]
		public string Lesson_Name
		{
			get
			{
				return this._Lesson_Name;
			}
			set
			{
				if ((this._Lesson_Name != value))
				{
					this.OnLesson_NameChanging(value);
					this.SendPropertyChanging();
					this._Lesson_Name = value;
					this.SendPropertyChanged("Lesson_Name");
					this.OnLesson_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spare01", DbType="NVarChar(255)")]
		public string Spare01
		{
			get
			{
				return this._Spare01;
			}
			set
			{
				if ((this._Spare01 != value))
				{
					this.OnSpare01Changing(value);
					this.SendPropertyChanging();
					this._Spare01 = value;
					this.SendPropertyChanged("Spare01");
					this.OnSpare01Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spare02", DbType="NVarChar(255)")]
		public string Spare02
		{
			get
			{
				return this._Spare02;
			}
			set
			{
				if ((this._Spare02 != value))
				{
					this.OnSpare02Changing(value);
					this.SendPropertyChanging();
					this._Spare02 = value;
					this.SendPropertyChanged("Spare02");
					this.OnSpare02Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spare03", DbType="NVarChar(255)")]
		public string Spare03
		{
			get
			{
				return this._Spare03;
			}
			set
			{
				if ((this._Spare03 != value))
				{
					this.OnSpare03Changing(value);
					this.SendPropertyChanging();
					this._Spare03 = value;
					this.SendPropertyChanged("Spare03");
					this.OnSpare03Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spare04", DbType="NVarChar(255)")]
		public string Spare04
		{
			get
			{
				return this._Spare04;
			}
			set
			{
				if ((this._Spare04 != value))
				{
					this.OnSpare04Changing(value);
					this.SendPropertyChanging();
					this._Spare04 = value;
					this.SendPropertyChanged("Spare04");
					this.OnSpare04Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spare05", DbType="NVarChar(255)")]
		public string Spare05
		{
			get
			{
				return this._Spare05;
			}
			set
			{
				if ((this._Spare05 != value))
				{
					this.OnSpare05Changing(value);
					this.SendPropertyChanging();
					this._Spare05 = value;
					this.SendPropertyChanged("Spare05");
					this.OnSpare05Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spare06", DbType="NVarChar(255)")]
		public string Spare06
		{
			get
			{
				return this._Spare06;
			}
			set
			{
				if ((this._Spare06 != value))
				{
					this.OnSpare06Changing(value);
					this.SendPropertyChanging();
					this._Spare06 = value;
					this.SendPropertyChanged("Spare06");
					this.OnSpare06Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spare07", DbType="NVarChar(255)")]
		public string Spare07
		{
			get
			{
				return this._Spare07;
			}
			set
			{
				if ((this._Spare07 != value))
				{
					this.OnSpare07Changing(value);
					this.SendPropertyChanging();
					this._Spare07 = value;
					this.SendPropertyChanged("Spare07");
					this.OnSpare07Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spare08", DbType="NVarChar(255)")]
		public string Spare08
		{
			get
			{
				return this._Spare08;
			}
			set
			{
				if ((this._Spare08 != value))
				{
					this.OnSpare08Changing(value);
					this.SendPropertyChanging();
					this._Spare08 = value;
					this.SendPropertyChanged("Spare08");
					this.OnSpare08Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spare09", DbType="NVarChar(255)")]
		public string Spare09
		{
			get
			{
				return this._Spare09;
			}
			set
			{
				if ((this._Spare09 != value))
				{
					this.OnSpare09Changing(value);
					this.SendPropertyChanging();
					this._Spare09 = value;
					this.SendPropertyChanged("Spare09");
					this.OnSpare09Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Spare10", DbType="NVarChar(255)")]
		public string Spare10
		{
			get
			{
				return this._Spare10;
			}
			set
			{
				if ((this._Spare10 != value))
				{
					this.OnSpare10Changing(value);
					this.SendPropertyChanging();
					this._Spare10 = value;
					this.SendPropertyChanged("Spare10");
					this.OnSpare10Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
